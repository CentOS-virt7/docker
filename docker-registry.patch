diff -up docker-67b9343fd2c2e461068a3f400f91eed7443bb782/docker/docker.go.docker-registry docker-67b9343fd2c2e461068a3f400f91eed7443bb782/docker/docker.go
--- docker-67b9343fd2c2e461068a3f400f91eed7443bb782/docker/docker.go.docker-registry	2014-07-22 10:28:30.200796561 -0400
+++ docker-67b9343fd2c2e461068a3f400f91eed7443bb782/docker/docker.go	2014-07-22 10:32:01.962283524 -0400
@@ -18,6 +18,7 @@ import (
 	"github.com/dotcloud/docker/engine"
 	"github.com/dotcloud/docker/opts"
 	flag "github.com/dotcloud/docker/pkg/mflag"
+	"github.com/dotcloud/docker/registry"
 	"github.com/dotcloud/docker/server"
 	"github.com/dotcloud/docker/sysinit"
 	"github.com/dotcloud/docker/utils"
@@ -87,23 +88,14 @@ func main() {
 		flag.SetOutput(os.Stdout)
 		flag.Usage()
 		return
-    }
+	}
 	if *flDefaultRegistry != "" {
-		regs := strings.Split(*flAppendRegistry, ",")
-		for r := range regs {
-			if regs[r] != "" && !strings.HasSuffix(regs[r], "/") {
-				regs[r] = fmt.Sprintf("%s/", regs[r])
-			}
-		}
-		server.RegistryList = regs
+		registry.RegistryList = strings.Split(*flDefaultRegistry, ",")
 	}
 	if *flAppendRegistry != "" {
 		regs := strings.Split(*flAppendRegistry, ",")
 		for r := range regs {
-			if regs[r] != "" && !strings.HasSuffix(regs[r], "/") {
-				regs[r] = fmt.Sprintf("%s/", regs[r])
-			}
-			server.RegistryList = append(server.RegistryList, regs[r])
+			registry.RegistryList = append(registry.RegistryList, regs[r])
 		}
 	}
 	if flHosts.Len() == 0 {
diff -up docker-67b9343fd2c2e461068a3f400f91eed7443bb782/docs/man/docker.1.md.docker-registry docker-67b9343fd2c2e461068a3f400f91eed7443bb782/docs/man/docker.1.md
diff -up docker-67b9343fd2c2e461068a3f400f91eed7443bb782/registry/registry.go.docker-registry docker-67b9343fd2c2e461068a3f400f91eed7443bb782/registry/registry.go
--- docker-67b9343fd2c2e461068a3f400f91eed7443bb782/registry/registry.go.docker-registry	2014-07-18 16:02:40.000000000 -0400
+++ docker-67b9343fd2c2e461068a3f400f91eed7443bb782/registry/registry.go	2014-07-22 10:28:32.727802372 -0400
@@ -128,9 +128,6 @@ func ResolveRepositoryName(reposName str
 	}
 	hostname := nameParts[0]
 	reposName = nameParts[1]
-	if strings.Contains(hostname, "index.docker.io") {
-		return "", "", fmt.Errorf("Invalid repository name, try \"%s\" instead", reposName)
-	}
 	if err := validateRepositoryName(reposName); err != nil {
 		return "", "", err
 	}
diff -up docker-67b9343fd2c2e461068a3f400f91eed7443bb782/registry/service.go.docker-registry docker-67b9343fd2c2e461068a3f400f91eed7443bb782/registry/service.go
--- docker-67b9343fd2c2e461068a3f400f91eed7443bb782/registry/service.go.docker-registry	2014-07-18 16:02:40.000000000 -0400
+++ docker-67b9343fd2c2e461068a3f400f91eed7443bb782/registry/service.go	2014-07-22 10:28:32.727802372 -0400
@@ -4,6 +4,8 @@ import (
 	"github.com/dotcloud/docker/engine"
 )
 
+var RegistryList = []string{"index.docker.io"}
+
 // Service exposes registry capabilities in the standard Engine
 // interface. Once installed, it extends the engine with the
 // following calls:
@@ -78,11 +80,20 @@ func (s *Service) Search(job *engine.Job
 		term        = job.Args[0]
 		metaHeaders = map[string][]string{}
 		authConfig  = &AuthConfig{}
+		r           *Registry
+		err         error
 	)
 	job.GetenvJson("authConfig", authConfig)
 	job.GetenvJson("metaHeaders", metaHeaders)
 
-	r, err := NewRegistry(authConfig, HTTPRequestFactory(metaHeaders), IndexServerAddress(), true)
+	for reg := len(RegistryList) - 1; reg >= 0; reg-- {
+		if endpoint, err := ExpandAndVerifyRegistryUrl(RegistryList[reg]); err == nil {
+			r, err = NewRegistry(authConfig, HTTPRequestFactory(metaHeaders), endpoint, true)
+			if err == nil {
+				break
+			}
+		}
+	}
 	if err != nil {
 		return job.Error(err)
 	}
diff -up docker-67b9343fd2c2e461068a3f400f91eed7443bb782/server/server.go.docker-registry docker-67b9343fd2c2e461068a3f400f91eed7443bb782/server/server.go
--- docker-67b9343fd2c2e461068a3f400f91eed7443bb782/server/server.go.docker-registry	2014-07-18 16:02:40.000000000 -0400
+++ docker-67b9343fd2c2e461068a3f400f91eed7443bb782/server/server.go	2014-07-22 10:33:53.361539696 -0400
@@ -71,8 +71,6 @@ func (srv *Server) handlerWrap(h engine.
 	}
 }
 
-var RegistryList = []string{""}
-
 // jobInitApi runs the remote api server `srv` as a daemon,
 // Only one api server can run at the same time - this is enforced by a pidfile.
 // The signals SIGINT, SIGQUIT and SIGTERM are intercepted for cleanup.
@@ -1375,11 +1373,6 @@ func (srv *Server) ImagePull(job *engine
 		return job.Error(err)
 	}
 
-	if endpoint == registry.IndexServerAddress() {
-		// If pull "index.docker.io/foo/bar", it's stored locally under "foo/bar"
-		localName = remoteName
-	}
-
 	if err = srv.pullRepository(r, job.Stdout, localName, remoteName, tag, sf, job.GetenvBool("parallel")); err != nil {
 		return job.Error(err)
 	}
@@ -1392,8 +1385,12 @@ func (srv *Server) RegistryPull(job *eng
 		tmp    = job.Args[0]
 		status = engine.StatusErr
 	)
-	for r := len(RegistryList) - 1; r >= 0; r-- {
-		job.Args[0] = fmt.Sprintf("%s%s", RegistryList[r], tmp)
+	for r := len(registry.RegistryList) - 1; r >= 0; r-- {
+		if registry.RegistryList[r] != "index.docker.io" {
+			job.Args[0] = fmt.Sprintf("%s/%s", registry.RegistryList[r], tmp)
+		} else {
+			job.Args[0] = tmp
+		}
 		status := srv.ImagePull(job)
 		if status == engine.StatusOK {
 			job.Args[1] = tmp
